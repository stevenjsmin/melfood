<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="mySqlGroupPurchaseDao">

    <select id="getGroupPurchase" parameterType="GroupPurchase" resultType="GroupPurchase">
        /* QUERY ID : getGroupPurchase */
        SELECT
            a.group_purchase_id 'groupPurchaseId',
            a.group_purchase_title 'groupPurchaseTitle',
            a.group_purchase_subtitle 'groupPurchaseSubtitle',
            a.purchase_organizer 'purchaseOrganizer',
            (SELECT CONCAT(user_name) FROM cmm_user WHERE user_id = a.purchase_organizer) 'purchaseOrganizerName',
            DATE_FORMAT(a.order_start_dt,'%Y-%m-%d %h:%i %p') 'orderStartDt',
            DATE_FORMAT(a.order_end_dt,'%Y-%m-%d %h:%i %p') 'orderEndDt',
            a.stop_selling 'stopSelling',
            a.stop_selling_reason 'stopSellingReason',
            a.market_address_street 'marketAddressStreet',
            a.market_address_suburb 'marketAddressSuburb',
            a.market_address_state 'marketAddressState',
            a.market_address_postcode 'marketAddressPostcode',
            a.market_address_comment 'marketAddressComment',
            DATE_FORMAT(a.market_open_start_dt,'%Y-%m-%d %h:%i %p') 'marketOpenStartDt',
            DATE_FORMAT(a.market_open_start_dt,'%Y-%m-%d') 'marketOpenStartDate',
            DATE_FORMAT(a.market_open_start_dt,'%h:%i %p') 'marketOpenStartTime',
            DATE_FORMAT(a.market_open_end_dt,'%Y-%m-%d %h:%i %p') 'marketOpenEndDt',
            DATE_FORMAT(a.market_open_end_dt,'%Y-%m-%d') 'marketOpenEndDate',
            DATE_FORMAT(a.market_open_end_dt,'%h:%i %p') 'marketOpenEndTime',
            a.market_gmap_latitude 'marketGmapLatitude',
            a.market_gmap_longitude 'marketGmapLongitude',
            a.market_gmap_formatted_address 'marketGmapFormattedAddress',
            a.minimum_purchase_amount 'minimumPurchaseAmount',
            a.maximum_purchase_amount 'maximumPurchaseAmount',
            a.discount_method 'discountMethod',
            a.discount_fixed_amount 'discountFixedAmount',
            a.discount_rate_value 'discountRateValue',
            a.deliverable 'deliverable',
            a.delivery_fee_per_km 'deliveryFeePerKm',
            a.delivery_basic_fee 'deliveryBasicFee',
            a.group_purchase_notice 'groupPurchaseNotice',
            a.mall_master_checked 'mallMasterChecked',
            a.use_yn 'useYn',
            a.create_datetime 'createDatetime',
            a.modify_datetime 'modifyDatetime',
            a.creator 'creator'
        FROM group_purchase a
       WHERE 1 = 1
            <if test="groupPurchaseId != null and groupPurchaseId != 0"> AND UPPER(a.group_purchase_id) = UPPER(#{groupPurchaseId}) </if>
            <if test="groupPurchaseTitle != null"> AND UPPER(a.group_purchase_title) LIKE CONCAT('%', UPPER(#{groupPurchaseTitle}), '%') </if>
            <if test="groupPurchaseSubtitle != null"> AND UPPER(a.group_purchase_subtitle) LIKE CONCAT('%', UPPER(#{groupPurchaseSubtitle}), '%') </if>
            <if test="purchaseOrganizer != null"> AND UPPER(a.purchase_organizer) = UPPER(#{purchaseOrganizer}) </if>
            <if test="orderStartDt != null"> AND str_to_date(#{orderStartDt}, '%Y-%m-%d') <![CDATA[ <=]]> str_to_date(a.order_start_dt, '%Y-%m-%d') </if>
            <if test="orderEndDt != null"> AND str_to_date(#{orderEndDt}, '%Y-%m-%d') <![CDATA[ >=]]> str_to_date(a.order_end_dt, '%Y-%m-%d') </if>
            <if test="searchDateFrom != null"> AND str_to_date(#{searchDateFrom}, '%Y-%m-%d') <![CDATA[ <=]]> str_to_date(a.order_start_dt, '%Y-%m-%d') </if>
            <if test="searchDateTo != null"> AND str_to_date(#{searchDateTo}, '%Y-%m-%d') <![CDATA[ >=]]> str_to_date(a.order_end_dt, '%Y-%m-%d') </if>
            <if test="stopSelling != null"> AND UPPER(a.stop_selling) = UPPER(#{stopSelling}) </if>
            <if test="stopSellingReason != null"> AND UPPER(a.stop_selling_reason) = UPPER(#{stopSellingReason}) </if>
            <if test="marketAddressStreet != null"> AND UPPER(a.market_address_street) LIKE CONCAT('%', UPPER(#{marketAddressStreet}), '%') </if>
            <if test="marketAddressSuburb != null"> AND UPPER(a.market_address_suburb) LIKE CONCAT('%', UPPER(#{marketAddressSuburb}), '%') </if>
            <if test="marketAddressState != null"> AND UPPER(a.market_address_state) LIKE CONCAT('%', UPPER(#{marketAddressState}), '%') </if>
            <if test="marketAddressPostcode != null"> AND UPPER(a.market_address_postcode) LIKE CONCAT('%', UPPER(#{marketAddressPostcode}), '%') </if>
            <if test="marketOpenStartDt != null"> AND str_to_date(#{marketOpenStartDt}, '%Y-%m-%d') <![CDATA[ <=]]> str_to_date(a.market_open_start_dt, '%Y-%m-%d') </if>
            <if test="marketOpenEndDt != null"> AND str_to_date(#{marketOpenEndDt}, '%Y-%m-%d') <![CDATA[ >=]]> str_to_date(a.market_open_end_dt, '%Y-%m-%d') </if>
            <if test="marketAddressComment != null"> AND UPPER(a.market_address_comment) LIKE CONCAT('%', UPPER(#{marketAddressComment}), '%') </if>
            <if test="minimumPurchaseAmount != null"> AND a.minimum_purchase_amount = #{minimumPurchaseAmount} </if>
            <if test="maximumPurchaseAmount != null"> AND a.maximum_purchase_amount = #{maximumPurchaseAmount} </if>
            <if test="discountMethod != null"> AND UPPER(a.discount_method) = UPPER(#{discountMethod}) </if>
            <if test="discountFixedAmount != null"> AND UPPER(a.discount_fixed_amount) = UPPER(#{discountFixedAmount}) </if>
            <if test="discountRateValue != null"> AND UPPER(a.discount_rate_value) = UPPER(#{discountRateValue}) </if>
            <if test="deliverable != null"> AND UPPER(a.deliverable) = UPPER(#{deliverable}) </if>
            <if test="deliveryFeePerKm != null"> AND a.delivery_fee_per_km = #{deliveryFeePerKm} </if>
            <if test="deliveryBasicFee != null"> AND a.delivery_basic_fee = #{deliveryBasicFee} </if>
            <if test="groupPurchaseNotice != null"> AND UPPER(a.group_purchase_notice) LIKE CONCAT('%', UPPER(#{groupPurchaseNotice}), '%') </if>
            <if test="mallMasterChecked != null"> AND UPPER(a.mall_master_checked) = UPPER(#{mallMasterChecked}) </if>
            <if test="useYn != null"> AND UPPER(a.use_yn) = UPPER(#{useYn}) </if>
            <if test="createDatetime != null"> AND str_to_date(#{createDatetime}, '%Y-%m-%d') <![CDATA[ <=]]> str_to_date(a.create_datetime, '%Y-%m-%d') </if>
            <if test="modifyDatetime != null"> AND str_to_date(#{modifyDatetime}, '%Y-%m-%d') <![CDATA[ >=]]> str_to_date(a.modify_datetime, '%Y-%m-%d') </if>
            <if test="creator != null"> AND UPPER(a.creator) = UPPER(#{creator}) </if>
        ORDER BY a.group_purchase_id ASC
        LIMIT #{pagenationPage}, #{pagenationPageSize}
    </select>
    <select id="getTotalCntGroupPurchase" parameterType="GroupPurchase" resultType="java.lang.Integer">
        /* QUERY ID : getTotalCntGroupPurchase */
        SELECT COUNT(*)
        FROM group_purchase a
        WHERE 1 = 1
            <if test="groupPurchaseId != null and groupPurchaseId != 0"> AND UPPER(a.group_purchase_id) = UPPER(#{groupPurchaseId}) </if>
            <if test="groupPurchaseTitle != null"> AND UPPER(a.group_purchase_title) LIKE CONCAT('%', UPPER(#{groupPurchaseTitle}), '%') </if>
            <if test="groupPurchaseSubtitle != null"> AND UPPER(a.group_purchase_subtitle) LIKE CONCAT('%', UPPER(#{groupPurchaseSubtitle}), '%') </if>
            <if test="purchaseOrganizer != null"> AND UPPER(a.purchase_organizer) = UPPER(#{purchaseOrganizer}) </if>
            <if test="orderStartDt != null"> AND str_to_date(#{orderStartDt}, '%Y-%m-%d') <![CDATA[ <=]]> str_to_date(a.order_start_dt, '%Y-%m-%d') </if>
            <if test="orderEndDt != null"> AND str_to_date(#{orderEndDt}, '%Y-%m-%d') <![CDATA[ >=]]> str_to_date(a.order_end_dt, '%Y-%m-%d') </if>
            <if test="searchDateFrom != null"> AND str_to_date(#{searchDateFrom}, '%Y-%m-%d') <![CDATA[ <=]]> str_to_date(a.order_start_dt, '%Y-%m-%d') </if>
            <if test="searchDateTo != null"> AND str_to_date(#{searchDateTo}, '%Y-%m-%d') <![CDATA[ >=]]> str_to_date(a.order_end_dt, '%Y-%m-%d') </if>
            <if test="stopSelling != null"> AND UPPER(a.stop_selling) = UPPER(#{stopSelling}) </if>
            <if test="stopSellingReason != null"> AND UPPER(a.stop_selling_reason) = UPPER(#{stopSellingReason}) </if>
            <if test="marketAddressStreet != null"> AND UPPER(a.market_address_street) LIKE CONCAT('%', UPPER(#{marketAddressStreet}), '%') </if>
            <if test="marketAddressSuburb != null"> AND UPPER(a.market_address_suburb) LIKE CONCAT('%', UPPER(#{marketAddressSuburb}), '%') </if>
            <if test="marketAddressState != null"> AND UPPER(a.market_address_state) LIKE CONCAT('%', UPPER(#{marketAddressState}), '%') </if>
            <if test="marketAddressPostcode != null"> AND UPPER(a.market_address_postcode) LIKE CONCAT('%', UPPER(#{marketAddressPostcode}), '%') </if>
            <if test="marketAddressComment != null"> AND UPPER(a.market_address_comment) LIKE CONCAT('%', UPPER(#{marketAddressComment}), '%') </if>
            <if test="marketOpenStartDt != null"> AND str_to_date(#{marketOpenStartDt}, '%Y-%m-%d') <![CDATA[ <=]]> str_to_date(a.market_open_start_dt, '%Y-%m-%d') </if>
            <if test="marketOpenEndDt != null"> AND str_to_date(#{marketOpenEndDt}, '%Y-%m-%d') <![CDATA[ >=]]> str_to_date(a.market_open_end_dt, '%Y-%m-%d') </if>
            <if test="minimumPurchaseAmount != null"> AND a.minimum_purchase_amount = #{minimumPurchaseAmount} </if>
            <if test="maximumPurchaseAmount != null"> AND a.maximum_purchase_amount = #{maximumPurchaseAmount} </if>
            <if test="discountMethod != null"> AND UPPER(a.discount_method) = UPPER(#{discountMethod}) </if>
            <if test="discountFixedAmount != null"> AND UPPER(a.discount_fixed_amount) = UPPER(#{discountFixedAmount}) </if>
            <if test="discountRateValue != null"> AND UPPER(a.discount_rate_value) = UPPER(#{discountRateValue}) </if>
            <if test="deliverable != null"> AND UPPER(a.deliverable) = UPPER(#{deliverable}) </if>
            <if test="deliveryFeePerKm != null"> AND a.delivery_fee_per_km = #{deliveryFeePerKm} </if>
            <if test="deliveryBasicFee != null"> AND a.delivery_basic_fee = #{deliveryBasicFee} </if>
            <if test="groupPurchaseNotice != null"> AND UPPER(a.group_purchase_notice) LIKE CONCAT('%', UPPER(#{groupPurchaseNotice}), '%') </if>
            <if test="mallMasterChecked != null"> AND UPPER(a.mall_master_checked) = UPPER(#{mallMasterChecked}) </if>
            <if test="useYn != null"> AND UPPER(a.use_yn) = UPPER(#{useYn}) </if>
            <if test="createDatetime != null"> AND str_to_date(#{createDatetime}, '%Y-%m-%d') <![CDATA[ <=]]> str_to_date(a.create_datetime, '%Y-%m-%d') </if>
            <if test="modifyDatetime != null"> AND str_to_date(#{modifyDatetime}, '%Y-%m-%d') <![CDATA[ >=]]> str_to_date(a.modify_datetime, '%Y-%m-%d') </if>
            <if test="creator != null"> AND UPPER(a.creator) = UPPER(#{creator}) </if>
    </select>

    <insert id="insertGroupPurchase" parameterType="GroupPurchase">
        /* QUERY ID : insertGroupPurchase */
        INSERT INTO group_purchase (
            group_purchase_title
            ,group_purchase_subtitle
            ,purchase_organizer
            ,order_start_dt
            ,order_end_dt
            ,stop_selling
            ,stop_selling_reason
            ,market_address_street
            ,market_address_suburb
            ,market_address_state
            ,market_address_postcode
            ,market_address_comment
            ,market_open_start_dt
            ,market_open_end_dt
            ,market_gmap_latitude
            ,market_gmap_longitude
            ,market_gmap_formatted_address
            ,minimum_purchase_amount
            ,maximum_purchase_amount
            ,discount_method
            ,discount_fixed_amount
            ,discount_rate_value
            ,deliverable
            ,delivery_fee_per_km
            ,delivery_basic_fee
            ,group_purchase_notice
            ,mall_master_checked
            ,use_yn
            ,creator)
        VALUES (
            TRIM(#{groupPurchaseTitle}),
            TRIM(#{groupPurchaseSubtitle}),
            TRIM(#{purchaseOrganizer}),
            STR_TO_DATE(#{orderStartDt}, '%Y-%m-%d %h:%i %p'),
            STR_TO_DATE(#{orderEndDt}, '%Y-%m-%d %h:%i %p'),
            TRIM(#{stopSelling}),
            TRIM(#{stopSellingReason}),
            TRIM(#{marketAddressStreet}),
            TRIM(#{marketAddressSuburb}),
            TRIM(#{marketAddressState}),
            TRIM(#{marketAddressPostcode}),
            TRIM(#{marketAddressComment}),
            STR_TO_DATE(#{marketOpenStartDt}, '%Y-%m-%d %h:%i %p'),
            STR_TO_DATE(#{marketOpenEndDt}, '%Y-%m-%d %h:%i %p'),
            TRIM(#{marketGmapLatitude}),
            TRIM(#{marketGmapLongitude}),
            TRIM(#{marketGmapFormattedAddress}),
            TRIM(#{minimumPurchaseAmount}),
            TRIM(#{maximumPurchaseAmount}),
            TRIM(#{discountMethod}),
            TRIM(#{discountFixedAmount}),
            TRIM(#{discountRateValue}),
            TRIM(#{deliverable}),
            TRIM(#{deliveryFeePerKm}),
            TRIM(#{deliveryBasicFee}),
            TRIM(#{groupPurchaseNotice}),
            TRIM(#{mallMasterChecked}),
            TRIM(#{useYn}),
            TRIM(#{creator}))
    </insert>

    <update id="modifyGroupPurchase" parameterType="GroupPurchase">
        /* QUERY ID : modifyGroupPurchase */
        UPDATE group_purchase SET
            modify_datetime = CURRENT_TIMESTAMP
            ,group_purchase_id = TRIM(#{groupPurchaseId})
            ,group_purchase_title = TRIM(#{groupPurchaseTitle})
            ,group_purchase_subtitle = TRIM(#{groupPurchaseSubtitle})
            ,purchase_organizer = TRIM(#{purchaseOrganizer})
            ,order_start_dt = STR_TO_DATE(#{orderStartDt}, '%Y-%m-%d %h:%i %p')
            ,order_end_dt = STR_TO_DATE(#{orderEndDt}, '%Y-%m-%d %h:%i %p')
            ,stop_selling = TRIM(#{stopSelling})
            ,stop_selling_reason = TRIM(#{stopSellingReason})
            ,market_address_street = TRIM(#{marketAddressStreet})
            ,market_address_suburb = TRIM(#{marketAddressSuburb})
            ,market_address_state = TRIM(#{marketAddressState})
            ,market_address_postcode = TRIM(#{marketAddressPostcode})
            ,market_address_comment = TRIM(#{marketAddressComment})
            ,market_open_start_dt = STR_TO_DATE(#{marketOpenStartDt}, '%Y-%m-%d %h:%i %p')
            ,market_open_end_dt = STR_TO_DATE(#{marketOpenEndDt}, '%Y-%m-%d %h:%i %p')
            ,market_gmap_latitude = TRIM(#{marketGmapLatitude})
            ,market_gmap_longitude = TRIM(#{marketGmapLongitude})
            ,market_gmap_formatted_address = TRIM(#{marketGmapFormattedAddress})
            ,minimum_purchase_amount = TRIM(#{minimumPurchaseAmount})
            ,maximum_purchase_amount = TRIM(#{maximumPurchaseAmount})
            ,discount_method = TRIM(#{discountMethod})
            ,discount_fixed_amount = TRIM(#{discountFixedAmount})
            ,discount_rate_value = TRIM(#{discountRateValue})
            ,deliverable = TRIM(#{deliverable})
            ,delivery_fee_per_km = TRIM(#{deliveryFeePerKm})
            ,delivery_basic_fee = TRIM(#{deliveryBasicFee})
            ,group_purchase_notice = TRIM(#{groupPurchaseNotice})
            ,mall_master_checked = TRIM(#{mallMasterChecked})
            ,use_yn = TRIM(#{useYn})
            ,creator = TRIM(#{creator})
        WHERE group_purchase_id = #{groupPurchaseId}
    </update>

    <update id="modifyGroupPurchaseForNotNull" parameterType="GroupPurchase">
        /* QUERY ID : modifyGroupPurchaseForNotNull */
        UPDATE group_purchase SET
            modify_datetime = CURRENT_TIMESTAMP
            <if test="groupPurchaseId != null and groupPurchaseId != 0">,group_purchase_id = TRIM(#{groupPurchaseId}) </if>
            <if test="groupPurchaseTitle != null">,group_purchase_title = TRIM(#{groupPurchaseTitle}) </if>
            <if test="groupPurchaseSubtitle != null">,group_purchase_subtitle = TRIM(#{groupPurchaseSubtitle}) </if>
            <if test="purchaseOrganizer != null">,purchase_organizer = TRIM(#{purchaseOrganizer}) </if>
            <if test="orderStartDt != null">,order_start_dt = STR_TO_DATE(#{orderStartDt}, '%Y-%m-%d %h:%i %p')</if>
            <if test="orderEndDt != null">,order_end_dt = STR_TO_DATE(#{orderEndDt}, '%Y-%m-%d %h:%i %p')</if>
            <if test="stopSelling != null">,stop_selling = TRIM(#{stopSelling}) </if>
            <if test="stopSellingReason != null">,stop_selling_reason = TRIM(#{stopSellingReason}) </if>
            <if test="marketAddressStreet != null">,market_address_street = TRIM(#{marketAddressStreet}) </if>
            <if test="marketAddressSuburb != null">,market_address_suburb = TRIM(#{marketAddressSuburb}) </if>
            <if test="marketAddressState != null">,market_address_state = TRIM(#{marketAddressState}) </if>
            <if test="marketAddressPostcode != null">,market_address_postcode = TRIM(#{marketAddressPostcode}) </if>
            <if test="marketAddressComment != null">,market_address_comment = TRIM(#{marketAddressComment}) </if>
            <if test="marketOpenStartDt != null">,market_open_start_dt = STR_TO_DATE(#{marketOpenStartDt}, '%Y-%m-%d %h:%i %p')</if>
            <if test="marketOpenEndDt != null">,market_open_end_dt = STR_TO_DATE(#{marketOpenEndDt}, '%Y-%m-%d %h:%i %p')</if>
            <if test="marketGmapLatitude != null">,market_gmap_latitude = TRIM(#{marketGmapLatitude}) </if>
            <if test="marketGmapLongitude != null">,market_gmap_longitude = TRIM(#{marketGmapLongitude}) </if>
            <if test="marketGmapFormattedAddress != null">,market_gmap_formatted_address = TRIM(#{marketGmapFormattedAddress}) </if>
            <if test="minimumPurchaseAmount != null">,minimum_purchase_amount = TRIM(#{minimumPurchaseAmount}) </if>
            <if test="maximumPurchaseAmount != null">,maximum_purchase_amount = TRIM(#{maximumPurchaseAmount}) </if>
            <if test="discountMethod != null">,discount_method = TRIM(#{discountMethod}) </if>
            <if test="discountFixedAmount != null">,discount_fixed_amount = TRIM(#{discountFixedAmount}) </if>
            <if test="discountRateValue != null">,discount_rate_value = TRIM(#{discountRateValue}) </if>
            <if test="deliverable != null">,deliverable = TRIM(#{deliverable}) </if>
            <if test="deliveryFeePerKm != null">,delivery_fee_per_km = TRIM(#{deliveryFeePerKm}) </if>
            <if test="deliveryBasicFee != null">,delivery_basic_fee = TRIM(#{deliveryBasicFee}) </if>
            <if test="groupPurchaseNotice != null">,group_purchase_notice = TRIM(#{groupPurchaseNotice}) </if>
            <if test="mallMasterChecked != null">,mall_master_checked = TRIM(#{mallMasterChecked}) </if>
            <if test="useYn != null">,use_yn = TRIM(#{useYn}) </if>
            <if test="creator != null">,creator = TRIM(#{creator}) </if>
        WHERE group_purchase_id = #{groupPurchaseId}
    </update>

    <delete id="deleteGroupPurchase" parameterType="GroupPurchase">
        /* QUERY ID : deleteGroupPurchase */
        DELETE FROM group_purchase
        WHERE group_purchase_id = #{groupPurchaseId}
    </delete>


    <select id="getNextPurchaseGroupImageSeq" parameterType="java.lang.Integer" resultType="java.lang.Integer">
        /* QUERY ID : getNextPurchaseGroupImageSeq */
        SELECT CASE WHEN max(image_seq) IS NULL THEN 1 ELSE (max(image_seq) + 1) END FROM group_purchase_product_image WHERE group_purchase_id = #{groupPurchaseId}
    </select>

    <insert id="insertGroupPurchaseImage" parameterType="ProductImage">
        /* QUERY ID : insertGroupPurchaseImage */
        INSERT INTO group_purchase_product_image (
            group_purchase_id
            ,image_seq
            ,image_file_id
            ,image_description,
            ,width
            ,height
            ,display_order
            ,creator)
        VALUES (
             #{prodId}
            ,#{imageSeq}
            ,#{imageFileId}
            ,#{imageDescription}
            ,#{width}
            ,#{height}
            ,#{displayOrder}
            ,#{creator})
    </insert>

    <insert id="insertGroupPurchaseImages" parameterType="java.util.List">
        /* QUERY ID : insertGroupPurchaseImages */
        INSERT INTO group_purchase_product_image (group_purchase_id, image_seq, image_file_id, image_description, width, height, display_order, creator) VALUES
        <foreach collection="list" index="index" item="item" separator=",">
            ( #{item.prodId}, #{item.imageSeq}, #{item.imageFileId}, #{item.imageDescription}, #{item.width}, #{item.height}, #{item.displayOrder}, #{item.creator} )
        </foreach>
    </insert>


    <select id="getProductImages" parameterType="ProductImage" resultType="ProductImage">
        /* QUERY ID : getProductImages */
        SELECT a.group_purchase_id 'prodId'
            ,a.image_seq 'imageSeq'
            ,a.image_file_id 'imageFileId'
            ,a.image_description 'imageDescription'
            ,(SELECT file_name FROM cmm_attachment_file WHERE file_id = a.image_file_id) 'fileName'
            ,a.width 'width'
            ,a.height 'height'
            ,a.display_order 'displayOrder'
            ,b.file_id 'attachFile.fileId'
            ,b.file_name 'attachFile.fileName'
            ,b.saved_file_name 'attachFile.savedFileName'
            ,b.sub_directory 'attachFile.subDirectory'
            ,b.file_type 'attachFile.fileType'
            ,b.file_size 'attachFile.fileSize'
            ,b.file_description 'attachFile.fileDescription'
         FROM group_purchase_product_image a LEFT OUTER JOIN cmm_attachment_file b ON b.file_id = a.image_file_id
        WHERE 1 = 1
            <if test="prodId != null and prodId != 0"> AND a.group_purchase_id = #{prodId} </if>
            <if test="imageSeq != null and imageSeq != 0"> AND a.image_seq = #{imageSeq} </if>
            <if test="imageFileId != null and imageFileId != 0"> AND a.image_file_id = #{imageFileId} </if>
            <if test="imageDescription != null"> AND UPPER(a.image_description) LIKE CONCAT('%', UPPER(#{imageDescription}), '%') </if>
            <if test="creator != null"> AND UPPER(a.creator) = UPPER(#{creator}) </if>
        ORDER BY a.group_purchase_id ASC, a.image_seq ASC
        LIMIT #{pagenationPage}, #{pagenationPageSize}
    </select>
    <select id="getTotalCntForProductImages" parameterType="ProductImage" resultType="java.lang.Integer">
        /* QUERY ID : getTotalCntForProductImages */
        SELECT COUNT(*)
          FROM group_purchase_product_image a LEFT OUTER JOIN cmm_attachment_file b ON b.file_id = a.image_file_id
         WHERE 1 = 1
            <if test="prodId != null and prodId != 0"> AND a.group_purchase_id = #{prodId} </if>
            <if test="imageSeq != null and imageSeq != 0"> AND a.image_seq = #{imageSeq} </if>
            <if test="imageFileId != null and imageFileId != 0"> AND a.image_file_id = #{imageFileId} </if>
            <if test="imageDescription != null"> AND UPPER(a.image_description) LIKE CONCAT('%', UPPER(#{imageDescription}), '%') </if>
            <if test="creator != null"> AND UPPER(a.creator) = UPPER(#{creator}) </if>
    </select>

    <select id="getNextProductImageSeq" parameterType="java.lang.Integer" resultType="java.lang.Integer">
        /* QUERY ID : getNextProductImageSeq */
        SELECT CASE WHEN max(image_seq) IS NULL THEN 1 ELSE (max(image_seq) + 1) END FROM group_purchase_product_image WHERE group_purchase_id = #{groupPurchaseId}
    </select>

    <delete id="deleteProductImage" parameterType="ProductImage">
        /* QUERY ID : deleteProductImage */
        DELETE FROM group_purchase_product_image WHERE group_purchase_id = #{prodId} <if test="imageSeq != null and imageSeq != 0"> AND image_seq = #{imageSeq}; </if>
    </delete>


    <select id="getGroupPurchaseForMallFront" parameterType="GroupPurchase" resultType="GroupPurchase">
        /* QUERY ID : getGroupPurchaseForMallFront */
        SELECT
            a.group_purchase_id 'groupPurchaseId',
            a.group_purchase_title 'groupPurchaseTitle',
            a.group_purchase_subtitle 'groupPurchaseSubtitle',
            a.purchase_organizer 'purchaseOrganizer',
            (SELECT CONCAT(user_name) FROM cmm_user WHERE user_id = a.purchase_organizer) 'purchaseOrganizerName',
            DATE_FORMAT(a.order_start_dt,'%Y-%m-%d %h:%i %p') 'orderStartDt',
            DATE_FORMAT(a.order_end_dt,'%Y-%m-%d %h:%i %p') 'orderEndDt',
            a.stop_selling 'stopSelling',
            a.stop_selling_reason 'stopSellingReason',
            a.market_address_street 'marketAddressStreet',
            a.market_address_suburb 'marketAddressSuburb',
            a.market_address_state 'marketAddressState',
            a.market_address_postcode 'marketAddressPostcode',
            a.market_address_comment 'marketAddressComment',
            DATE_FORMAT(a.market_open_start_dt,'%Y-%m-%d %h:%i %p') 'marketOpenStartDt',
            DATE_FORMAT(a.market_open_start_dt,'%Y-%m-%d') 'marketOpenStartDate',
            DATE_FORMAT(a.market_open_start_dt,'%h:%i %p') 'marketOpenStartTime',
            DATE_FORMAT(a.market_open_end_dt,'%Y-%m-%d %h:%i %p') 'marketOpenEndDt',
			DATE_FORMAT(a.market_open_end_dt,'%Y-%m-%d') 'marketOpenEndDate',
			DATE_FORMAT(a.market_open_end_dt,'%h:%i %p') 'marketOpenEndTime',
            a.market_gmap_latitude 'marketGmapLatitude',
            a.market_gmap_longitude 'marketGmapLongitude',
            a.market_gmap_formatted_address 'marketGmapFormattedAddress',
            a.minimum_purchase_amount 'minimumPurchaseAmount',
            a.maximum_purchase_amount 'maximumPurchaseAmount',
            a.discount_method 'discountMethod',
            a.discount_fixed_amount 'discountFixedAmount',
            a.discount_rate_value 'discountRateValue',
            a.deliverable 'deliverable',
            a.delivery_fee_per_km 'deliveryFeePerKm',
            a.delivery_basic_fee 'deliveryBasicFee',
            a.group_purchase_notice 'groupPurchaseNotice',
            a.mall_master_checked 'mallMasterChecked',
            a.use_yn 'useYn',
            a.create_datetime 'createDatetime',
            a.modify_datetime 'modifyDatetime',
            a.creator 'creator'
        FROM group_purchase a
        WHERE 1 = 1
              AND str_to_date(#{searchDateFrom}, '%Y-%m-%d') <![CDATA[ <=]]> str_to_date(a.market_open_end_dt, '%Y-%m-%d')
        ORDER BY a.stop_selling ASC, a.group_purchase_id ASC
        LIMIT #{pagenationPage}, #{pagenationPageSize}
    </select>
    <select id="getTotalCntGroupPurchaseForMallFront" parameterType="GroupPurchase" resultType="java.lang.Integer">
        /* QUERY ID : getTotalCntGroupPurchaseForMallFront */
        SELECT COUNT(*)
          FROM group_purchase a
        WHERE 1 = 1
        AND str_to_date(#{searchDateFrom}, '%Y-%m-%d') <![CDATA[ <=]]> str_to_date(a.market_open_end_dt, '%Y-%m-%d')
    </select>



</mapper>